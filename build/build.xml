<?xml version="1.0" encoding="UTF-8"?>
<project name="www-core-jar" xmlns:artifact="urn:maven-artifact-ant">
	<typedef 
		resource="org/apache/maven/artifact/ant/antlib.xml" 
		uri="urn:maven-artifact-ant" 
		classpath="ant_lib/maven-ant-tasks-2.1.3.jar" />
	
	<artifact:pom id="pom" file="../pom.xml"/>
	<artifact:dependencies pomrefid="pom" filesetid="pom.fileset" pathid="pom.classpath"/>
	
	<tstamp>
		<format property="nowtime" pattern="yyyyMMddHHmm"/>
	</tstamp>
	
	<!-- directory for all classes -->
	<property name="build" value="build" />
	<!-- directory for dist. files -->
	<property name="dist" value="dist" />
	<!-- directory for resourcces. files -->
	<property name="resources" value="resources" />
	<!-- directory for maven dependency jar -->
	<property name="dependency-lib" value="dependency-lib" />
	<!-- directory for webapp -->
	<property name="webapp" value="webapp" />
	
	<property name="build_deployServer" value="build_deployServer" />
	<property name="dist_deployServer" value="dist_deployServer" />
		
	<target name="make_deploy_server_jar">
		<delete dir="${build_deployServer}" />
		<mkdir dir="${build_deployServer}" />
		<mkdir dir="${dist_deployServer}" />
		
		<echo message="deploy server compile start..." />
		<javac debug="true" 
			fork="true" memoryinitialsize="256m" memorymaximumsize="512m" 
			srcdir="../src/main/java" destdir="${build_deployServer}" encoding="UTF-8">
			
			<classpath refid="pom.classpath"/>
			<include name="www/deploy/remote/**"/>
			<include name="www/deploy/vo/**"/>
		</javac>
		<echo message="deploy server compile end." />
		
		<!--copyfile dest="${build_deployServer}/www/deploy/remote/policy" src="../src/main/java/www/deploy/remote/policy"/-->
		
		<echo message="deploy server make jar start..." />
		<jar jarfile="${dist_deployServer}/deployServer_${nowtime}.jar">
			<fileset dir="${build_deployServer}"/>
		</jar>
		<echo message="deploy server make jar end.." />
	</target>
	
	<target name="clean-build">
		<delete dir="${build}" />
		<!--delete dir="${dist}" /-->
		<delete dir="${resources}" />
	</target>
	
	<target name="init" depends="clean-build">
		<tstamp />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${resources}" />
	</target>
	
	<target name="clean-dependency-lib">
		<delete dir="${dependency-lib}" />
	</target>
	
	<target name="dependency-lib" depends="clean-dependency-lib">
		<mkdir dir="${dependency-lib}"/>
		<copy todir="${dependency-lib}">
			<fileset refid="pom.fileset"/>
			<mapper type="flatten"/>
		</copy>
	</target>
	
	<target name="clean-webapp" depends="clean-build, dependency-lib">
		<delete dir="${webapp}"/>
	</target>
	
	<target name="init-webapp" depends="init, clean-webapp">
		<mkdir dir="${webapp}"/>
		<copy todir="${webapp}">
			<fileset dir="../src/main/webapp">
				<patternset>
					<exclude name="cm_data/**"/>
					<exclude name="WEB-INF/logs/**"/>
					<exclude name=".svn"/>
				</patternset>
			</fileset>
		</copy>
	</target>
	
	<target name="compile" depends="init">
		<echo message="core compile start..." />
		
		<javac debug="true" 
			fork="true" memoryinitialsize="256m" memorymaximumsize="512m" 
			srcdir="../src/main/java" destdir="${build}" encoding="UTF-8">
			
			<classpath refid="pom.classpath"/>
		</javac>
		
		<echo message="core compile end." />
	</target>
	
	<target name="resources">
		<copy todir="${resources}">
			<fileset dir="../src/main/resources">
				<patternset>
					<exclude name=".svn"/>
				</patternset>
			</fileset>
		</copy>		
	</target>
	
	<target name="core-jar" depends="compile, resources"
		description="솔루션 core jar 파일을 생성한다">
		
		<jar jarfile="${dist}/onnet-www-core_${nowtime}.jar">
			<fileset dir="${build}"/>
			<fileset dir="${resources}">
				<patternset>
					<include name="onnetsoft/**"/>
				</patternset>
			</fileset>
		</jar>
	</target>
	
	<target name="make-webapp" depends="init-webapp, compile, resources"
		description="webapp 전체 파일을 생성한다">
		
		<move todir="${webapp}/WEB-INF/lib">
			<fileset dir="${dependency-lib}"/>
		</move>
		<move todir="${webapp}/WEB-INF/classes">
			<fileset dir="${build}"/>
		</move>
		<move todir="${webapp}/WEB-INF/classes">
			<fileset dir="${resources}"/>
		</move>
	</target>
	
	<target name="package-dev" depends="make-webapp, clean-dependency-lib, clean-build" 
		description="개발서버 tar 배포파일을 생성한다">
		
		<delete>
			<fileset dir="${webapp}/WEB-INF/lib">
				<patternset>
					<include name="servlet-api*.jar"/>
					<include name="jsp-api*.jar"/>
				</patternset>
			</fileset>
		</delete>
		
		<delete file="${build}/www/config/conf/package-config.xml"/>
		<delete file="${webapp}/WEB-INF/classes/config/conf/package-config.xml.real"/>
		<move todir="${webapp}/WEB-INF/classes/config/conf">
			<fileset dir="${webapp}/WEB-INF/classes/config/conf"/>
			<mapper type="glob" from="package-config_dev.xml" to="package-config.xml"/>
		</move>
		
		<delete file="${webapp}/WEB-INF/classes/config/spring/context-datasource.xml"/>
		<delete file="${webapp}/WEB-INF/classes/config/spring/context-datasource.xml.real"/>
		<move todir="${webapp}/WEB-INF/classes/config/spring">
			<fileset dir="${webapp}/WEB-INF/classes/config/spring"/>
			<mapper type="glob" from="context-datasource.xml.dev" to="context-datasource.xml"/>
		</move>
		
		<tar destfile="${dist}/webapp-package_dev_${nowtime}.tar" basedir="${webapp}"/>
	</target>
	
	<target name="package-real" depends="make-webapp, clean-dependency-lib, clean-build" 
			description="운영서버 tar 배포파일을 생성한다">
			
		<delete>
			<fileset dir="${webapp}/WEB-INF/lib">
				<patternset>
					<include name="servlet-api*.jar"/>
					<include name="jsp-api*.jar"/>
				</patternset>
			</fileset>
		</delete>
		
		<delete file="${webapp}/WEB-INF/classes/config/conf/package-config.xml"/>
		<delete file="${webapp}/WEB-INF/classes/config/conf/package-config.xml.dev"/>
		<move todir="${webapp}/WEB-INF/classes/config/conf">
			<fileset dir="${webapp}/WEB-INF/classes/config/conf"/>
			<mapper type="glob" from="package-config_real.xml" to="package-config.xml"/>
		</move>
	
		<delete file="${webapp}/WEB-INF/classes/config/spring/context-datasource.xml"/>
		<delete file="${webapp}/WEB-INF/classes/config/spring/context-datasource.xml.dev"/>
		<move todir="${webapp}/WEB-INF/classes/config/spring">
			<fileset dir="${webapp}/WEB-INF/classes/config/spring"/>
			<mapper type="glob" from="context-datasource.xml.real" to="context-datasource.xml"/>
		</move>
		
		<move todir="${webapp}/WEB-INF/classes">
			<fileset dir="${webapp}/WEB-INF/classes"/>
			<mapper type="glob" from="log4j.properties.real" to="log4j.properties"/>
		</move>		
		
		<tar destfile="${dist}/webapp-package_real_${nowtime}.tar" basedir="${webapp}"/>
	</target>
</project>